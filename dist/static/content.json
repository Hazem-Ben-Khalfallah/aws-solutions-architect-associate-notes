[{"name":"Home","description":"This is the Home page","path":"/aws-solutions-architect-associate-notes","text":"","wordCount":0,"type":"TOC"},{"name":"General","description":"Exam presentation and general info","path":"/aws-solutions-architect-associate-notes/general","text":"General","wordCount":1,"type":"Content"},{"name":"Well-Architected Framework","description":"Well-Architected Framework","path":"/aws-solutions-architect-associate-notes/wellArchitectedframework","text":"","wordCount":0,"type":"Content"},{"name":"White Papers Review","description":"?","path":"/aws-solutions-architect-associate-notes/whitepapers","text":"","wordCount":0,"type":"Content"},{"name":"Security and Identity","description":"IAM, Resource Access Manager, Cognito, Secrets Manager, GuardDuty, Macie, KMS, Cloud HSM, Directory Service, WAF, Shield ","path":"/aws-solutions-architect-associate-notes/securityandidentity","text":"","wordCount":0,"type":"TOC"},{"name":"IAM","description":"Manage access to AWS resources","path":"/aws-solutions-architect-associate-notes/securityandidentity/iam","text":"IAM (Identity and Access Management)\n\nAWS Identity and Access Management (IAM) enables you to securely control access to AWS services and resources for your users.\n\nAllows for centralized control and shared access to your AWS Account and/or AWS services\nBy default when you create a user, they have NO permissions to do anything\nRoot account has full admin access upon account creation\nNot region specific, can be shared between all regions\nGranular permission sets for AWS resources\nIncludes Federation Integration which taps into Active Directory, Facebook, Linkedin, etc. for authentication (Identity Federation)\nMulti-factor authentication support\nAllows configuration of temporary access for users, devices and services\nSet up and manage password policy and password rotation policy for IAM users\nIntegration with many different AWS services\nSupports PCI DSS compliance (Payment Card Industry Data Security Standard)\nAccess can be applied to\n  Users - End users (people)\n  Groups - Collection of users under one set of permissions\n  Roles - Assigned to AWS resources. Example: specifying what the resource (such as EC2) is allowed to access on another resource (S3)\n  Policies - JSON Document that defines one or more permissions\nPolicies can be applied to users, groups and roles\nYou can assign up to 10 managed policies to a single group\nPolicy documents must have a version, and a statement in the body; The statement must consist of:\n  Effects (Allow, Deny),\n  Actions (Which action to allow/deny such a * for all actions), and\n  Resources (affected resources such as * for all resources)\nAll resources can share the same policy document\nThere are 3 different types of roles\n  Service Roles\n  Cross account access roles: Used when you have multiple AWS accounts and another AWS account must interact with the current AWS account.\n  Identity provider access roles: Roles for Facebook, Google or similar Identity providers.\nIn order for a new IAM user to be able to log into the console, the user must have a password set.\nBy default a new users access is only accomplished through the use of the access key/secret key\nIf the users password is a generated password, it also will only be shown at the time of creation.\nCustomizable Console Sign-in link can be configured on the main IAM page (ie aws.yourdomain.com)\nCustomizable Console Sign-in links must be globally unique. If a sign in link name is already taken, you must choose an alternative\nRoot account is email address that you used to register your account\nRecommended that root account:\n  should not be used for login\n  should be secured with Multi-factor Authentication (MFA)\nCan create Access Key ID & Secret Access Keys to allow IAM users (or service accounts) to be used with AWS CLI or API calls.\nAccess Key ID & Secret Access Keys are not the same as Username & Password and are not interchangeable.\n  Username & Password are used to login to console.\n  Access Key ID & Secret Access Keys are used for programmatic access (via the APIs or CLI)\nWhen creating a user's credentials, you can only see/download the credentials at the time of creation not after.\nAccess Keys can be retired, and new ones can be created in the event that secret access keys are lost.\nTo create a user password, once the users have been created, choose the user you want to set the password for and from the User Actions drop list, click manage password. Here you can opt to create a generated or custom password. If generated, there is an option to force the user to set a custom password on next login. Once a generated password has been issued, you can see the password which is the same as the access keys. Its shown once only.\nClick on Policies from the left side menu and choose the policies that you want to apply to your users. When you pick a policy that you want applied to a user, select the policy, and then from the top Policy Actions drop menu, choose attach and select the user that you want to assign the policy to.\n\nIAM ARNs\narn:partition:service:region:account:resource\n\nWhere:\npartition identifies the partition that the resource is in. For standard AWS Regions, the partition is aws. If you have resources in other partitions, the partition is aws-partitionname. For example, the partition for resources in the China (Beijing) Region is aws-cn. You cannot delegate access between accounts in different partitions.\nservice identifies the AWS product. For IAM resources, this is always iam.\nregion is the Region the resource resides in. For IAM resources, this is always kept blank.\naccount is the AWS account ID with no hyphens (for example, 123456789012).\nresource is the portion that identifies the specific resource by name.\n\n| Resource or Operation                                  | Default Limit |\n| ------------------------------------------------------ | ------------- |\n| Groups per account                                     | 100           |\n| Instance profiles                                      | 100           |\n| Roles                                                  | 250           |\n| Server Certificates                                    | 20            |\n| Users                                                  | 5000          |\n| Number of policies allowed to attach to a single group | 10            |\n\nCreate a group:\nimages/iam/iam1.png\n\nPolicy: json defined permissions\nimages/iam/iam2.png\n\nIAM roles are a secure way to grant permissions to entities that you trust.\nimages/iam/iam3.png","wordCount":803,"type":"Content"},{"name":"RAM","description":"Share AWS resources with other AWS accounts.","path":"/aws-solutions-architect-associate-notes/securityandidentity/ram","text":"RAM (Resource Access Manager)\n\nAWS Resource Access Manager (RAM) is a service that enables you to easily and securely share AWS resources with any AWS account or within your AWS Organization. You can share AWS Transit Gateways, Subnets, AWS License Manager configurations, and Amazon Route 53 Resolver rules resources with RAM.\n\nMany organizations use multiple accounts to create administrative or billing isolation, and to limit the impact of errors. RAM eliminates the need to create duplicate resources in multiple accounts, reducing the operational overhead of managing those resources in every single account you own. You can create resources centrally in a multi-account environment, and use RAM to share those resources across accounts in 3 simple steps:\n\n1- create a Resource Share,\n2- specify resources,\n3- specify principals with whom to share. A principal can be:\n  AWS accounts,\n  organizational units (OU),\n  or an entire organization from AWS Organizations\n\nRAM is available to you at no additional charge (free).\n\nBenefits\nReduce Operational Overhead\nProcure AWS resources centrally, and use RAM to share resources such as subnets or License Manager configurations with other accounts. This eliminates the need to provision duplicate resources in every account in a multi-account environment, reducing the operational overhead of managing those resources in every account.\nImprove Security and Visibility\nRAM leverages existing policies and permissions set in AWS Identity and Access Management (IAM) to govern the consumption of shared resources. RAM also provides comprehensive visibility into shared resources to set alarms and visualize logs through integration with Amazon CloudWatch and AWS CloudTrail.\n\nOptimize Costs\nSharing resources such as AWS License Manager configurations across accounts allows you to leverage licenses in multiple parts of your company to increase utilization and optimize costs.\n\nHow it works?\nimages/ram/ram1.png","wordCount":271,"type":"Content"},{"name":"Cognito","description":"Authentication & Authorization for Web and mobile apps","path":"/aws-solutions-architect-associate-notes/securityandidentity/cognito","text":"Cognito\nAmazon Cognito lets you easily add user sign-up and sign-in to your mobile and web apps.\nyou also have the options to authenticate users through social identity providers such as Facebook, Twitter, or Amazon, via SAML 2.0 identity solutions, or by using your own identity system.\nCan enable users to sign up or sign in with an email address or phone number.\nsupport SMS-based multi-factor authentication (MFA).\n\nUser Pools & Identity Pools\nUser Pools\nfor authentication purpose\nmanage sign-up sign-in functionality for mobile and web app\ncan sign-in directly (use email, password) or use Facebook, Amazon, Google\n\nIdentity Pools\nfor authorization purpose\nprovide temporary AWS credentials to access AWS services like S3 or DynamoDB\n\nimages/cognito/cognito1.png\n\nCognito Synchronisation\nAmazon Cognito enables you to save data locally on users devices, allowing your applications to work even when the devices are offline.\nYou can thencsynchronize data across user devices so that their app experience remains consistent regardless of the device they use.\nSave mobile data like game states or preferences.\nUse SNS to send notification to all devices associated with user identity whenever data stored in the cloud changes (email address change, password, setting in app... )\nimages/cognito/cognito2.png\n","wordCount":177,"type":"Content"},{"name":"Secrets Manager","description":"Easily rotate, manage, and retrieve secrets throughout their lifecycle","path":"/aws-solutions-architect-associate-notes/securityandidentity/secretsmanager","text":"SecretsManager\n\nProtects secrets needed to access your applications, services, and IT resources.\nEnables you to easily rotate, manage, and retrieve:\n  database credentials,\n  API keys,\n  and other secrets throughout their lifecycle.\nUsers and applications retrieve secrets with a call to Secrets Manager APIs, eliminating the need to hardcode sensitive information in plain text.\nSecrets Manager offers secret rotation with built-in integration for:\n  Amazon RDS,\n  Amazon Redshift,\n  and Amazon DocumentDB.\nthe service is extensible to other types of secrets, including API keys and OAuth tokens.\nEnables you to control access to secrets using fine-grained permissions and audit secret rotation centrally for resources in the AWS Cloud, third-party services, and on-premises.","wordCount":101,"type":"Content"},{"name":"GuardDuty","description":"Intelligent threat detection to protect your AWS accounts and workloads","path":"/aws-solutions-architect-associate-notes/securityandidentity/guardduty","text":"GuardDuty\n\nAmazon GuardDuty is a continuous security monitoring service that analyzes and processes the following Data sources:\n  VPC Flow Logs,\n  CloudTrail management event logs,\n  Cloudtrail S3 data event logs,\n  DNS logs.\nIt uses threat intelligence feeds, such as lists of malicious IP addresses and domains, and machine learning to identify unexpected and potentially unauthorized and malicious activity within your AWS environment.\nThis can include issues like:\n  escalations of privileges,\n  uses of exposed credentials,\n  communication with malicious IP addresses, URLs, or domains.\nGuardDuty can detect compromised EC2 instances serving malware or mining bitcoin.\nIt also monitors AWS account access behavior for signs of compromise, such as unauthorized infrastructure deployments, like instances deployed in a Region that has never been used, or unusual API calls, like a password policy change to reduce password strength.\nGuardDuty informs you of the status of your AWS environment by producing security findings that you can view:\n  in the GuardDuty console\n  or through Amazon CloudWatch events.","wordCount":152,"type":"Content"},{"name":"Macie","description":"Discover and protect your sensitive data at scale","path":"/aws-solutions-architect-associate-notes/securityandidentity/macie","text":"Macie\n\nMacie automatically provides an inventory of Amazon S3 buckets including a list of:\n  unencrypted buckets,\n  publicly accessible buckets,\n  buckets shared with AWS accounts outside those you have defined in AWS Organizations.\nThen, Macie applies machine learning and pattern matching techniques to the buckets you select to identify and alert you to sensitive data, such as personally identifiable information (PII).\nMacie’s alerts, or findings, can be searched and filtered in the AWS Management Console and sent to Amazon CloudWatch Events for easy integration with existing workflow or event management systems, or to be used in combination with AWS services, such as AWS Step Functions to take automated remediation actions.\nHelp you meet regulations, such as the Health Insurance Portability and Accountability Act (HIPAA) and General Data Privacy Regulation (GDPR).\n\nHow it works?\nimages/macie/macie1.png","wordCount":126,"type":"Content"},{"name":"KMS","description":"Create keys and control encryption across AWS and beyond.","path":"/aws-solutions-architect-associate-notes/securityandidentity/kms","text":"KMS (Key Management Service)","wordCount":4,"type":"Content"},{"name":"Storage","description":"S3, EFS, FSX, Storage Gateway, AWS Backup","path":"/aws-solutions-architect-associate-notes/storage","text":"Storage","wordCount":1,"type":"Content"},{"name":"Database","description":"RDS, DynamoDB, Redshift, Elasticache","path":"/aws-solutions-architect-associate-notes/database","text":"","wordCount":0,"type":"TOC"},{"name":"RDS","description":"Relational Database Service","path":"/aws-solutions-architect-associate-notes/database/rds","text":"RDS","wordCount":1,"type":"Content"},{"name":"DynamoDB","description":"DynamoDB - NoSQL","path":"/aws-solutions-architect-associate-notes/database/DynamoDB","text":"DynamoDB","wordCount":1,"type":"Content"},{"name":"Compute","description":"EC2, serverless, Batch, Elastic Beanstalk, ECR, ECS, EKS","path":"/aws-solutions-architect-associate-notes/compute","text":"","wordCount":0,"type":"Content"},{"name":"Migration & Transfer","description":"DMS, DataSync, Snow","path":"/aws-solutions-architect-associate-notes/migrationandtransfer","text":"","wordCount":0,"type":"Content"},{"name":"Networking & Content Delivery","description":"VPC, CloudFront, Route 53, API Gateway, Direct Connect, Global Accelerator","path":"/aws-solutions-architect-associate-notes/networking","text":"","wordCount":0,"type":"Content"},{"name":"Management & Governance","description":"AWS Organizations, Cloud watch, Cloud trail, AWS Auto Scaling, Systems Manager, CloudFormation, AWS Well-Architected Tool, Personal Health Dashboard, AWS Compute Optimizer","path":"/aws-solutions-architect-associate-notes/managementandgovernance","text":"","wordCount":0,"type":"Content"},{"name":"Developer Tools","description":"CodeCommit, CodeDeploy, X-Ray","path":"/aws-solutions-architect-associate-notes/developertools","text":"","wordCount":0,"type":"Content"},{"name":"Analytics","description":"Athena, Amazon Redshift, EMR,, Kinesis, Data Pipeline, Elasticsearch Service","path":"/aws-solutions-architect-associate-notes/analytics","text":"","wordCount":0,"type":"Content"},{"name":"Application Integration","description":"SNS, SQS, SWF, Step Functions..","path":"/aws-solutions-architect-associate-notes/applicationintegration","text":"","wordCount":0,"type":"Content"},{"name":"AWS Cost Management","description":"AWS Cost Explorer, AWS Budgets","path":"/aws-solutions-architect-associate-notes/cost management","text":"","wordCount":0,"type":"Content"},{"name":"End User Computing","description":"Desktop Workspaces","path":"/aws-solutions-architect-associate-notes/endusercomputing","text":"","wordCount":0,"type":"Content"}]